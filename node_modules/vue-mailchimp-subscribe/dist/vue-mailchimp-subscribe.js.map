{"version":3,"file":"vue-mailchimp-subscribe.js","sources":["../src/vue-mailchimp-subscribe.js"],"sourcesContent":["import jsonp from 'jsonp'\nimport queryString from 'query-string'\n\nexport default {\n  props: {\n    url: {\n      required: true,\n      type: String,\n    },\n\n    userId: {\n      required: true,\n      type: String,\n    },\n\n    listId: {\n      required: true,\n      type: String,\n    },\n  },\n\n  data() {\n    return {\n      email: null,\n      success: false,\n      error: null,\n      loading: false,\n    }\n  },\n\n  computed: {\n    data() {\n      return queryString.stringify({\n        u: this.userId,\n        id: this.listId,\n        EMAIL: this.email,\n      })\n    },\n  },\n\n  methods: {\n    setEmail(value = '') {\n      this.email = value.trim()\n    },\n\n    subscribe() {\n      if (this.email === null || this.loading) {\n        return\n      }\n\n      this.success = false\n      this.error = null\n      this.loading = true\n\n      const url = `${this.url}?${this.data}`\n\n      jsonp(url, { param: 'c' }, this.onResponse)\n    },\n\n    onResponse(error, data) {\n      this.loading = false\n\n      if (error) {\n        this.error = error\n      }\n\n      if (data && data.result === 'error') {\n        this.error = this.formatErrorMessage(data.msg)\n      }\n\n      if (this.error) {\n        this.$emit('error', this.error)\n      } else {\n        this.success = true\n        this.email = null\n        this.$emit('success')\n      }\n    },\n\n    formatErrorMessage(message) {\n      return message.replace('0 - ', '')\n    },\n  },\n\n  render() {\n    return this.$scopedSlots.default({\n      subscribe: this.subscribe,\n      setEmail: this.setEmail,\n      error: this.error,\n      success: this.success,\n      loading: this.loading,\n    })\n  },\n}"],"names":["props","url","required","type","String","userId","listId","data","email","success","error","loading","computed","queryString","stringify","u","this","id","EMAIL","methods","setEmail","value","trim","subscribe","jsonp","param","onResponse","result","formatErrorMessage","msg","$emit","message","replace","render","$scopedSlots","default"],"mappings":"+HAGe,CACbA,MAAO,CACLC,IAAK,CACHC,UAAU,EACVC,KAAMC,QAGRC,OAAQ,CACNH,UAAU,EACVC,KAAMC,QAGRE,OAAQ,CACNJ,UAAU,EACVC,KAAMC,SAIVG,sBACS,CACLC,MAAO,KACPC,SAAS,EACTC,MAAO,KACPC,SAAS,IAIbC,SAAU,CACRL,uBACSM,EAAYC,UAAU,CAC3BC,EAAGC,KAAKX,OACRY,GAAID,KAAKV,OACTY,MAAOF,KAAKR,UAKlBW,QAAS,CACPC,kBAASC,kBAAQ,SACVb,MAAQa,EAAMC,QAGrBC,qBACqB,OAAfP,KAAKR,OAAkBQ,KAAKL,eAI3BF,SAAU,OACVC,MAAQ,UACRC,SAAU,EAIfa,EAFeR,aAAYA,KAAU,KAE1B,CAAES,MAAO,KAAOT,KAAKU,cAGlCA,oBAAWhB,EAAOH,QACXI,SAAU,EAEXD,SACGA,MAAQA,GAGXH,GAAwB,UAAhBA,EAAKoB,cACVjB,MAAQM,KAAKY,mBAAmBrB,EAAKsB,MAGxCb,KAAKN,WACFoB,MAAM,QAASd,KAAKN,aAEpBD,SAAU,OACVD,MAAQ,UACRsB,MAAM,aAIfF,4BAAmBG,UACVA,EAAQC,QAAQ,OAAQ,MAInCC,yBACSjB,KAAKkB,aAAaC,QAAQ,CAC/BZ,UAAWP,KAAKO,UAChBH,SAAUJ,KAAKI,SACfV,MAAOM,KAAKN,MACZD,QAASO,KAAKP,QACdE,QAASK,KAAKL"}
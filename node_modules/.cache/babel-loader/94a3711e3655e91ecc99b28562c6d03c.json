{"remainingRequest":"/var/www/html/active-intro/node_modules/thread-loader/dist/cjs.js!/var/www/html/active-intro/node_modules/babel-loader/lib/index.js!/var/www/html/active-intro/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/active-intro/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/active-intro/src/components/stripe.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/active-intro/src/components/stripe.vue","mtime":1623239257362},{"path":"/var/www/html/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi92YXIvd3d3L2h0bWwvYWN0aXZlLWludHJvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBTdHJpcGVFbGVtZW50Q2FyZCB9IGZyb20gJ0B2dWUtc3RyaXBlL3Z1ZS1zdHJpcGUnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOyAvL2NvbnN0IHN0cmlwZSA9IHJlcXVpcmUoJ3N0cmlwZScpKCdwa190ZXN0XzUxSXZnbkhTRjE2UHlaZGVab0xnbm84Smt3T2ExYXNSaTZsb3N5STJCbWIwQmk5Y1lnb05RSmlEY09SMHVQTjV1NWRUNFFmV0FKaHV4VFFMVWRBRWJ3ZFRwMDBqRk5DeVFBZCcpOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFN0cmlwZUVsZW1lbnRDYXJkOiBTdHJpcGVFbGVtZW50Q2FyZAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHRoaXMucHVsaXNoYWJsZUtleSA9ICdwa190ZXN0XzUxSVRSbk1IN09BUndxQ2JDTEMxYmxvSExwb2JWekxxaXJFeExjVXNGQWJJbGU4dDhPaEI4S3JCVEF6VExqUE9uOWFuNmtNNldCOTh3dVI5dWxSczJqeTR3MDBUbXRiRXBMeic7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgYW1vdW50OiAxMDAsCiAgICAgIHRva2VuOiBudWxsLAogICAgICBjaGFyZ2U6IG51bGwKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30sCiAgbWV0aG9kczogewogICAgc3VibWl0OiBmdW5jdGlvbiBzdWJtaXQoKSB7CiAgICAgIGFsZXJ0KCdnZ2cnKTsKICAgICAgY29uc29sZS5sb2coJ3llcycpOwogICAgICB0aGlzLiRyZWZzLmVsZW1lbnRSZWYuc3VibWl0KCk7CiAgICB9LAogICAgdG9rZW5DcmVhdGVkOiBmdW5jdGlvbiB0b2tlbkNyZWF0ZWQodG9rZW4pIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2codG9rZW4pOwogICAgICAgICAgICAgICAgX3RoaXMudG9rZW4gPSB0b2tlbjsKICAgICAgICAgICAgICAgIGRhdGEgPSB7CiAgICAgICAgICAgICAgICAgICJjYXJkIjogdG9rZW4uaWQsCiAgICAgICAgICAgICAgICAgICJjdXJyZW5jeSI6ICJJTlIiLAogICAgICAgICAgICAgICAgICAiYW1vdW50IjogMTAwLAogICAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQWN0aXZlIEludHJvIgogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgICAgICAgICAgYXhpb3MucG9zdCgiaHR0cHM6Ly9kZW1vLmZvcnRlY3NvbHV0aW9uLmNvbS9sYXJhdmVsNi9hcGkvY2hhcmdlIiwgZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKHJlc3BvbnNlKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzLiR0b2FzdGVkLnN1Y2Nlc3MoJ1N1Y2Nlc3MsIFBhaWQgU3VjY2Vzc2Z1bGx5IScsIHsKICAgICAgICAgICAgICAgICAgICBpY29uOiAnY2hlY2snIC8vaWNvbiA6ICdlcnJvcl9vdXRsaW5lJwoKICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goJy9zdWNjZXNzJyk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIC8qIHRoaXMuY2hhcmdlID17CiAgICAgICAgICAgICAgICAgICBzb3VyY2U6IHRva2VuLmlkLAogICAgICAgICAgICAgICAgICAgYW1vdW50OnRoaXMuYW1vdW50LAogICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246dGhpcy5kZXNjcmlwdGlvbgogICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgIGNvbnN0IGNoYXJnZXMgPSBhd2FpdCBzdHJpcGUuY2hhcmdlcy5jcmVhdGUoewogICAgICAgICAgICAgICAgICAgYW1vdW50OiAxMDAsCiAgICAgICAgICAgICAgICAgICBjdXJyZW5jeTogJ3VzZCcsCiAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ0V4YW1wbGUgY2hhcmdlJywKICAgICAgICAgICAgICAgICAgIHNvdXJjZTogdGhpcy50b2tlbiwKICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjaGFyZ2VzKTsKICAgICAgICAgICAgICAgICB0aGlzLnNlbmRUb2tlblRvU2VydmVyKHRoaXMuY2hhcmdlKTsKICAgICAgICAgICAgICAgICAvLyBoYW5kbGUgdGhlIHRva2VuCiAgICAgICAgICAgICAgICAgLy8gc2VuZCBpdCB0byB5b3VyIHNlcnZlcgogICAgICAgICAgICAgICAgICAqLwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgICAvKiAgc2VuZFRva2VuVG9TZXJ2ZXIoY2hhcmdlKXsKICAgICAgICBjb25zb2xlLmxvZygnZGRkJyk7CiAgICAgICAgY29uc29sZS5sb2coY2hhcmdlKTsKICAgICAgfSovCgogIH0KfTs="},{"version":3,"sources":["stripe.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,SAAA,iBAAA,QAAA,wBAAA;AACA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AAEA,eAAA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,SAAA,aAAA,GAAA,6GAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,MAAA,EAAA,GAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,MAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAeA,EAAA,OAAA,EAAA,mBACA,CAEA,CAlBA;AAmBA,EAAA,OAAA,EAAA;AAGA,IAAA,MAHA,oBAGA;AACA,MAAA,KAAA,CAAA,KAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,MAAA;AACA,KAPA;AASA,IAAA,YATA,wBASA,KATA,EASA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,gBAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AAEA,gBAAA,IAJA,GAIA;AACA,0BAAA,KAAA,CAAA,EADA;AAEA,8BAAA,KAFA;AAGA,4BAAA,GAHA;AAIA,iCAAA;AAJA,iBAJA;AAWA,gBAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AAEA,gBAAA,KAAA,CAAA,IAAA,CAAA,qDAAA,EAAA,IAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,kBAAA,OAAA,CAAA,IAAA,CAAA,QAAA;;AAEA,kBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,6BAAA,EAAA;AACA,oBAAA,IAAA,EAAA,OADA,CAEA;;AAFA,mBAAA;;AAKA,kBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA,iBAVA;AAYA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CA;AACA;AACA;AACA;AACA;;AAzDA;AAnBA,CAAA","sourcesContent":["<template>\n  <div>\n    <stripe-element-card\n      ref=\"elementRef\"\n      :pk=\"pulishableKey\"\n      locale=\"en\"\n      :amount=\"amount\"\n      @token=\"tokenCreated\"\n      @loading=\"loading = $event\"\n    />\n    <button @click=\"submit\">Pay ${{ amount / 100}}</button>\n  </div>\n</template>\n\n<script>\n\n\nimport { StripeElementCard } from '@vue-stripe/vue-stripe';\nimport axios from 'axios'\n//const stripe = require('stripe')('pk_test_51IvgnHSF16PyZdeZoLgno8JkwOa1asRi6losyI2Bmb0Bi9cYgoNQJiDcOR0uPN5u5dT4QfWAJhuxTQLUdAEbwdTp00jFNCyQAd');\n\nexport default {\n\n    components:{\n      StripeElementCard,\n    },\n    data: function() {\n      this.pulishableKey = 'pk_test_51ITRnMH7OARwqCbCLC1bloHLpobVzLqirExLcUsFAbIle8t8OhB8KrBTAzTLjPOn9an6kM6WB98wuR9ulRs2jy4w00TmtbEpLz';\n      return {\n        loading: false,\n        amount: 100,\n        token: null,\n        charge:null\n      };\n    }, \n \n    created: function()\n    {\n\n    },\n    methods: {\n\n\n        submit() {\n           alert('ggg');\n           console.log('yes');\n           this.$refs.elementRef.submit();\n        },\n\n        async tokenCreated (token) {\n          console.log(token);\n          this.token = token;\n\n          const data = {\n            \"card\": token.id,\n            \"currency\": \"INR\",\n            \"amount\": 100,\n            \"description\": \"Active Intro\",\n        };\n\n        console.log(data);\n\n        axios.post(\"https://demo.fortecsolution.com/laravel6/api/charge\", data)\n        .then((response)=>{\n            console.warn(response);\n\n            this.$toasted.success('Success, Paid Successfully!', {\n                icon : 'check',\n                 //icon : 'error_outline'\n             })\n\n            this.$router.push('/success');\n        });\n\n         /* this.charge ={\n            source: token.id,\n            amount:this.amount,\n            description:this.description\n          }\n\n\n          const charges = await stripe.charges.create({\n            amount: 100,\n            currency: 'usd',\n            description: 'Example charge',\n            source: this.token,\n          });\n          console.log(charges);\n          this.sendTokenToServer(this.charge);\n          // handle the token\n          // send it to your server\n\n          */\n        },\n      /*  sendTokenToServer(charge){\n          console.log('ddd');\n          console.log(charge);\n        }*/\n\n}\n\n}\n</script>\n\n\n"],"sourceRoot":"src/components"}]}
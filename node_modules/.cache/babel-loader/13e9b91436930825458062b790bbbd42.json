{"remainingRequest":"/var/www/html/per/fortec/active-intro01-09-2021/active-intro/node_modules/babel-loader/lib/index.js!/var/www/html/per/fortec/active-intro01-09-2021/active-intro/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/per/fortec/active-intro01-09-2021/active-intro/src/store.js","dependencies":[{"path":"/var/www/html/per/fortec/active-intro01-09-2021/active-intro/src/store.js","mtime":1623413492000},{"path":"/var/www/html/per/fortec/active-intro01-09-2021/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/per/fortec/active-intro01-09-2021/active-intro/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/per/fortec/active-intro01-09-2021/active-intro/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVnVleCBmcm9tICJ2dWV4IjsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICB1c2VyOiB7CiAgICAgIGxvZ2dlZEluOiBmYWxzZSwKICAgICAgZGF0YTogbnVsbAogICAgfSwKICAgIGlzbG9nZ2VkSW46IGZhbHNlCiAgfSwKICBnZXR0ZXJzOiB7CiAgICB1c2VyOiBmdW5jdGlvbiB1c2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyOwogICAgfSwKICAgIGlzbG9nZ2VkSW46IGZ1bmN0aW9uIGlzbG9nZ2VkSW4oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmlzbG9nZ2VkSW47CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9MT0dHRURfSU46IGZ1bmN0aW9uIFNFVF9MT0dHRURfSU4oc3RhdGUsIHZhbHVlKSB7CiAgICAgIC8vY29uc29sZS5sb2codmFsdWUpOwogICAgICBzdGF0ZS5pc2xvZ2dlZEluID0gdmFsdWU7CiAgICAgIHN0YXRlLnVzZXIubG9nZ2VkSW4gPSB2YWx1ZTsKICAgIH0sCiAgICBTRVRfVVNFUjogZnVuY3Rpb24gU0VUX1VTRVIoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUudXNlci5kYXRhID0gZGF0YTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGZldGNoVXNlcjogZnVuY3Rpb24gZmV0Y2hVc2VyKF9yZWYsIHVzZXIpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICBjb21taXQoIlNFVF9MT0dHRURfSU4iLCB1c2VyICE9PSBudWxsKTsKCiAgICAgIGlmICh1c2VyKSB7CiAgICAgICAgY29tbWl0KCJTRVRfVVNFUiIsIHsKICAgICAgICAgIGRpc3BsYXlOYW1lOiB1c2VyLmRpc3BsYXlOYW1lLAogICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb21taXQoIlNFVF9VU0VSIiwgbnVsbCk7CiAgICAgIH0KICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["/var/www/html/per/fortec/active-intro01-09-2021/active-intro/src/store.js"],"names":["Vue","Vuex","use","Store","state","user","loggedIn","data","isloggedIn","getters","mutations","SET_LOGGED_IN","value","SET_USER","actions","fetchUser","commit","displayName","email"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AACA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,KADN;AAEJC,MAAAA,IAAI,EAAE;AAFF,KADD;AAKLC,IAAAA,UAAU,EAAE;AALP,GADqB;AAQ5BC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,IADO,gBACFD,KADE,EACI;AACT,aAAOA,KAAK,CAACC,IAAb;AACD,KAHM;AAIPG,IAAAA,UAJO,sBAIIJ,KAJJ,EAIU;AACf,aAAOA,KAAK,CAACI,UAAb;AACD;AANM,GARmB;AAgB5BE,EAAAA,SAAS,EAAE;AACTC,IAAAA,aADS,yBACKP,KADL,EACYQ,KADZ,EACmB;AAC1B;AACAR,MAAAA,KAAK,CAACI,UAAN,GAAmBI,KAAnB;AACAR,MAAAA,KAAK,CAACC,IAAN,CAAWC,QAAX,GAAsBM,KAAtB;AACD,KALQ;AAMTC,IAAAA,QANS,oBAMAT,KANA,EAMOG,IANP,EAMa;AACpBH,MAAAA,KAAK,CAACC,IAAN,CAAWE,IAAX,GAAkBA,IAAlB;AACD;AARQ,GAhBiB;AA0B5BO,EAAAA,OAAO,EAAE;AACPC,IAAAA,SADO,2BACeV,IADf,EACqB;AAAA,UAAhBW,MAAgB,QAAhBA,MAAgB;AAC1BA,MAAAA,MAAM,CAAC,eAAD,EAAkBX,IAAI,KAAK,IAA3B,CAAN;;AACA,UAAIA,IAAJ,EAAU;AACRW,QAAAA,MAAM,CAAC,UAAD,EAAa;AACjBC,UAAAA,WAAW,EAAEZ,IAAI,CAACY,WADD;AAEjBC,UAAAA,KAAK,EAAEb,IAAI,CAACa;AAFK,SAAb,CAAN;AAID,OALD,MAKO;AACLF,QAAAA,MAAM,CAAC,UAAD,EAAa,IAAb,CAAN;AACD;AACF;AAXM;AA1BmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: {\n      loggedIn: false,\n      data: null\n    },\n    isloggedIn: false\n  },\n  getters: {\n    user(state){\n      return state.user\n    },\n    isloggedIn(state){\n      return state.isloggedIn\n    },\n  },\n  mutations: {\n    SET_LOGGED_IN(state, value) {\n      //console.log(value);\n      state.isloggedIn = value;\n      state.user.loggedIn = value;\n    },\n    SET_USER(state, data) {\n      state.user.data = data;\n    }\n  },\n  actions: {\n    fetchUser({ commit }, user) {\n      commit(\"SET_LOGGED_IN\", user !== null);\n      if (user) {\n        commit(\"SET_USER\", {\n          displayName: user.displayName,\n          email: user.email\n        });\n      } else {\n        commit(\"SET_USER\", null);\n      }\n    }\n  }\n});\n"]}]}
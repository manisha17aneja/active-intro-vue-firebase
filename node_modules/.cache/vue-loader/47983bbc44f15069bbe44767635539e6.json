{"remainingRequest":"/var/www/html/active-intro/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/active-intro/src/components/users/Create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/active-intro/src/components/users/Create.vue","mtime":1628766496943},{"path":"/var/www/html/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Create.vue","sourceRoot":"src/components/users","sourcesContent":["<template>\n\n\n \n<body>\n\n\n<div id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin5\" data-sidebartype=\"full\"\n    data-sidebar-position=\"absolute\" data-header-position=\"absolute\" data-boxed-layout=\"full\">\n\n    <Header></Header>\n\n    <Sidebar></Sidebar>\n\n    <div class=\"dashboard-wrapper page-wrapper\">\n            <div class=\"page-breadcrumb\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-lg-3 col-md-4 col-sm-4 col-xs-12\">\n                        <h4 class=\"page-title\">Create Company</h4>\n                    </div>\n                </div>\n            </div>\n                <div class=\"container-fluid\">\n                    <div class=\"row\">\n             \n                    <div class=\"col-lg-12 col-xlg-9 col-md-12\">\n\n                    <form class=\"form-horizontal form-material\" v-on:submit.prevent=\"submit\">\n                        <div class=\"card profile-card\">\n                            <div class=\"card-body\">\n\n                            <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Subscription</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                        <select name=\"country\" v-model.trim=\"$v.subscription.$model\" :class=\"{'is-invalid': validationStatus($v.subscription)}\" class=\"form-control\" @change=\"getCategories()\">\n                                        <option value=\"\">Select Subscription</option>\n                                        <option v-for=\"subscription in subscriptions\" v-bind:key=\"subscription.name\" v-bind:value=\"subscription.id\">\n                                                {{ subscription.name }}\n                                            </option>\n                                        </select>\n                                        <div v-if=\"!$v.subscription.required\" class=\"invalid-feedback\">The subscription field is required.</div>\n                                     <!-- <span>Selected: {{ subscription }}</span>--->\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Category</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                        <select name=\"country\" v-model.trim=\"$v.category.$model\" :class=\"{'is-invalid': validationStatus($v.category)}\" class=\"form-control\">\n                                        <option value=\"\">Select Category</option>\n                                        <option v-for=\"category in categories\" v-bind:key=\"category.name\" v-bind:value=\"category.id\">\n                                                {{ category.name }}\n                                            </option>\n                                        </select>\n                                        <div v-if=\"!$v.category.required\" class=\"invalid-feedback\">The category field is required.</div>\n                                     <!-- <span>Selected: {{ category }}</span>--->\n                                        </div>\n                                    </div>\n                               \n                               \n            \n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Name</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" v-model.trim=\"$v.name.$model\" :class=\"{'is-invalid': validationStatus($v.name)}\" class=\"form-control form-control-lg\">\n                                            <div v-if=\"!$v.name.required\" class=\"invalid-feedback\">The name field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">About</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                        <textarea v-model.trim=\"$v.about.$model\" :class=\"{'is-invalid': validationStatus($v.about)}\" class=\"form-control form-control-lg\" rows=\"5\"></textarea>\n                                            <div v-if=\"!$v.about.required\" class=\"invalid-feedback\">The about field is required.</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Image (Logo)</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                        <img v-bind:src=\"previewImage\" class=\"uploading-image\" />\n                                        <input type=\"file\" accept=\"image/jpeg\" @change=uploadImage>\n                                         <div v-if=\"!$v.image.required\" class=\"invalid-feedback\">The image field is required.</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Background Image</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                        <img v-bind:src=\"previewBackgroundImage\" class=\"uploading-image\" />\n                                        <input type=\"file\" accept=\"image/jpeg\" @change=uploadBackgroundImage>\n                                         <div v-if=\"!$v.image.required\" class=\"invalid-feedback\">The image field is required.</div>\n                                        </div>\n                                    </div>\n\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Location</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" v-model.trim=\"$v.location.$model\" :class=\"{'is-invalid': validationStatus($v.location)}\" class=\"form-control\">\n                                            <div v-if=\"!$v.location.required\" class=\"invalid-feedback\">The location field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Country</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                          \n                                            <select name=\"country\" v-model.trim=\"$v.country.$model\" :class=\"{'is-invalid': validationStatus($v.country)}\" class=\"form-control\">\n                                            <option value=\"\">Select Country</option>\n                                            <option v-for=\"country in countries\" v-bind:key=\"country.name\" v-bind:value=\"country.id\">\n                                                {{ country.name }}\n                                            </option>\n                                        </select>\n                                            \n                                            \n                                            <div v-if=\"!$v.country.required\" class=\"invalid-feedback\">The country field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Postcode</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" v-model.trim=\"$v.postcode.$model\" :class=\"{'is-invalid': validationStatus($v.postcode)}\" class=\"form-control form-control-lg\">\n                                            <div v-if=\"!$v.postcode.required\" class=\"invalid-feedback\">The postcode field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Phone No</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" v-model.trim=\"$v.phone_no.$model\" :class=\"{'is-invalid': validationStatus($v.phone_no)}\" class=\"form-control form-control-lg\">\n                                            <div v-if=\"!$v.phone_no.required\" class=\"invalid-feedback\">The phone no field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Website URL</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" v-model.trim=\"$v.website.$model\" :class=\"{'is-invalid': validationStatus($v.website)}\" class=\"form-control form-control-lg\">\n                                            <div v-if=\"!$v.website.required\" class=\"invalid-feedback\">The website field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Outlets included</label>\n                                        <div class=\"col-md-12 p-0 collapse-col\">\n                                            <div class=\"company-add\" v-for=\"(find, index) in finds\" :key=\"find.id\">\n                                                <input v-model=\"find.address\" class=\"form-control form-control-lg\" placeholder=\"Enter Address\">\n                                                <input v-model=\"find.city\" class=\"form-control form-control-lg\" placeholder=\"Enter City\">\n                                                <span  class=\"delete btn button-white uppercase fas fa-times\" @click=\"deleteFind(index)\">\n                                                </span>\n                                        </div>\n  \n                                        <span id=\"add\" @click=\"addFind\" class=\"btn add-more button-yellow uppercase fas fa-plus\"></span>\n\n                                       <!-- <pre>{{ $data }}</pre> --->\n                                        </div>\n                                    </div>\n\n                                    \n\n\n                                    </div>\n                                   </div>\n\n                                   <div class=\"card profile-card\">\n                                    <div class=\"card-body\">\n                                    \n \n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Meta Title</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" v-model.trim=\"$v.meta_title.$model\" :class=\"{'is-invalid': validationStatus($v.meta_title)}\" class=\"form-control form-control-lg\">\n                                            <div v-if=\"!$v.meta_title.required\" class=\"invalid-feedback\">The meta title field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Meta Description</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                           <textarea v-model.trim=\"$v.meta_description.$model\" :class=\"{'is-invalid': validationStatus($v.meta_description)}\" class=\"form-control form-control-lg\" rows=\"5\"></textarea>\n                                            <div v-if=\"!$v.meta_description.required\" class=\"invalid-feedback\">The meta description field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                  \n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Meta Keywords</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" v-model.trim=\"$v.meta_keywords.$model\" :class=\"{'is-invalid': validationStatus($v.meta_keywords)}\" class=\"form-control form-control-lg\">\n                                            <div v-if=\"!$v.meta_keywords.required\" class=\"invalid-feedback\">The meta keywords field is required.</div>\n                                        </div>\n                                    </div>\n\n                                   \n                               \n                                    <div class=\"form-group mb-4\">\n                                        <div class=\"col-sm-12 pl-0 mt-10\">\n                                        <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\"/>\n                                        </div>\n                                    </div>\n\n                                    </div>\n                                    </div>\n                                </form>\n                        \n                        \n                    </div>\n                </div>\n            </div>\n           \n        </div>\n    \n    <Footer></Footer>\n\n\n    </div>\n\n\n\n\n</body>\n\n\n</template>\n\n\n\n\n<script>\n\nimport Header from './../admin-header';\nimport Footer from './../admin-footer';\nimport Sidebar from './../admin-sidebar';\n\nimport { required } from 'vuelidate/lib/validators'\nimport Vue from 'vue'\nimport axios from 'axios'\nimport VueAxios from 'vue-axios'\nimport { db } from '../../main'\n\nVue.use(VueAxios,axios)\n\nexport default {\n    name: 'Create',\n    components:{\n        'Header':Header,\n        'Sidebar':Sidebar,\n        'Footer':Footer,\n       \n    },\n    data: function() {\n        return {\n            name: '', \n            about: '',\n            image: '', \n            background_image: '',\n            location: '',\n            country: '',\n            postcode: '',\n            phone_no: '',\n            website: '',\n            meta_title: '',\n            meta_description: '',\n            meta_keywords: '',\n            previewImage:'',\n            previewBackgroundImage:'',\n            subscriptions: [],\n            categories: [],\n            category:'',\n            subscription:'',\n            finds: [],\n            countries: [],\n        }\n    }, \n    created: function(){\n        this.getSubscriptions();\n        this.getCountries();\n    },\n    validations: {\n        subscription: {required},\n        category: {required},\n        name: {required},\n        about: {required},\n        image: {},\n        background_image: {},\n        location: {required},\n        country: {required},\n        postcode: {required},\n        phone_no: {required},\n        website: {required},\n        meta_title: {},\n        meta_description: {},\n        meta_keywords: {}\n    },\n\n    methods: {\n\n        addFind: function () {\n            this.finds.push({ address: '',city: '' });\n          },\n        deleteFind: function (index) {\n        console.log(index);\n        console.log(this.finds);\n        this.finds.splice(index, 1);\n        },\n\n        getCategories(){\n            //alert(this.subscription);\n\n            this.categories = [];\n\n            db.collection(\"selected_categories\")\n            .where(\"subscription\", \"==\", this.subscription)\n            .get()\n            .then((querySnapshot) => {\n                //console.log('hhhh1');\n                querySnapshot.forEach((doc) => {\n\n\n            db.collection(\"categories\").doc(doc.data().category)\n            .get()\n            .then((docs) => {\n\n                this.categories.push({\n                    id: docs.id,\n                    name: docs.data().name,\n                    //slug: doc.data().slug,\n                });\n                //console.log(doc.id, \" => \", doc.data());\n                \n                });\n\n            });\n\n            \n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n\n\n        },\n\n\n        getCountries()\n        {\n        this.countries = [];\n\n            db.collection(\"countries\")\n            .get()\n            .then((querySnapshot) => {\n                //console.log('hhhh1');\n                querySnapshot.forEach((doc) => {\n                this.countries.push({\n                    id: doc.id,\n                    name: doc.data().country,\n                    slug: doc.data().slug,\n                });\n                //console.log(doc.id, \" => \", doc.data());\n                \n                });\n\n            \n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n        },\n\n\n        getSubscriptions()\n        {\n            this.subscriptions = [];\n     \n            db.collection(\"subscriptions\")\n              .get()\n              .then((querySnapshot) => {\n                console.log('hhhh1');\n                querySnapshot.forEach((doc) => {\n                  this.subscriptions.push({\n                    id: doc.id,\n                    name: doc.data().title,\n                  });\n                  //console.log(doc.id, \" => \", doc.data());\n                 \n                });\n\n                console.log(this.subscriptions);\n              })\n              .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n              });\n        },\n\n        uploadImage(e){\n            const image = e.target.files[0];\n            const reader = new FileReader();\n            reader.readAsDataURL(image);\n            reader.onload = e =>{\n                this.previewImage = e.target.result;\n                console.log('dd');\n            };\n        },\n\n        uploadBackgroundImage(e){\n            const image = e.target.files[0];\n            const reader = new FileReader();\n            reader.readAsDataURL(image);\n            reader.onload = e =>{\n                this.previewBackgroundImage = e.target.result;\n                console.log('dd');\n            };\n        },\n\n        validationStatus: function(validation) {\n            return typeof validation != \"undefined\" ? validation.$error : false;\n        },\n\n        submit: function() {\n\n           // alert(Math.floor(Math.random() * 10000));\n\n            this.$v.$touch();\n            if (this.$v.$pendding || this.$v.$error) return;\n            \n            var  date = new Date().toLocaleString();//.toISOString().slice(0, 10);\n           \n            db.collection(\"companies\")\n            .add({ \n                subscription: this.subscription,\n                category: this.category,\n                name: this.name,\n                code: Math.floor(Math.random() * 10000),\n                about: this.about,\n                image: this.previewImage,\n                background_image: this.previewBackgroundImage,\n                location: this.location,\n                country: this.country,\n                postcode: this.postcode,\n                phone_no: this.phone_no,\n                website: this.website,\n                outlets: this.finds,\n                meta_title: this.meta_title,\n                meta_description: this.meta_description,\n                meta_keywords: this.meta_keywords,\n                created: date,\n                modified: date,\n            })\n            .then((doc) => {\n                console.log(\"Added Successfully!\");\n                console.log(doc.id);\n\n                db.collection(\"companies\").doc(doc.id).update({ cid: doc.id });\n\n                this.$toasted.success('Success, Added Successfully!', {\n                   icon : 'check',\n                    //icon : 'error_outline'\n                })\n                this.$router.push('/companies/index');\n            })\n            .catch((error) => {\n                console.error(\"Error writing document: \", error);\n            }); \n\n        }\n    }\n}\n</script>"]}]}
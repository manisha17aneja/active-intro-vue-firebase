{"remainingRequest":"/var/www/html/aa/active-intro_5july/active-intro/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/aa/active-intro_5july/active-intro/src/components/countries/Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/aa/active-intro_5july/active-intro/src/components/countries/Edit.vue","mtime":1623142670000},{"path":"/var/www/html/aa/active-intro_5july/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/aa/active-intro_5july/active-intro/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/aa/active-intro_5july/active-intro/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/aa/active-intro_5july/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/aa/active-intro_5july/active-intro/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgSGVhZGVyIGZyb20gJy4vLi4vYWRtaW4taGVhZGVyJzsKaW1wb3J0IEZvb3RlciBmcm9tICcuLy4uL2FkbWluLWZvb3Rlcic7CmltcG9ydCBTaWRlYmFyIGZyb20gJy4vLi4vYWRtaW4tc2lkZWJhcic7CgppbXBvcnQgeyBkYiB9IGZyb20gJy4uLy4uL21haW4nCgpleHBvcnQgZGVmYXVsdHsKICAgICBuYW1lOiAnRWRpdCcsCiAgICAgICAgZGF0YSgpewogICAgICAgICAgICByZXR1cm57CiAgICAgICAgICAgICAgICBpdGVtOnt9LAogICAgICAgICAgICAgICAgcHJldmlld0ltYWdlOicnLAogICAgICAgICAgICAgICAgc2VsZWN0ZWQ6ICcnLAogICAgICAgICAgICAgICAgb3B0aW9uczogW10sCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNvbXBvbmVudHM6ewogICAgICAgICAgICAnSGVhZGVyJzpIZWFkZXIsCiAgICAgICAgICAgICdTaWRlYmFyJzpTaWRlYmFyLAogICAgICAgICAgICAnRm9vdGVyJzpGb290ZXIsCiAgICAgICAgCiAgICAgICAgfSwKCiAgICAgICAgY3JlYXRlZDogZnVuY3Rpb24oKXsKICAgICAgICAgICAgdGhpcy5nZXRJdGVtKCk7CiAgICAgICAgICAgIHRoaXMuZ2V0Q29tcGFuaWVzKCk7CiAgICAgICAgfSwKICAgICAgICBjb21wdXRlZDogewogICAgICAgICAgICBzbHVnOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnNsdWdpZnkodGhpcy5pdGVtLmNvdW50cnkpCiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBtZXRob2RzOiB7CgogICAgICAgICAgICBzbHVnaWZ5ICh0ZXh0LCBhbXBlcnNhbmQgPSAnYW5kJykgewogICAgICAgICAgICAgICAgY29uc3QgYSA9ICfDoMOhw6TDosOow6nDq8Oqw6zDrcOvw67DssOzw7bDtMO5w7rDvMO7w7HDp8Ofw7/hu7PDvcWTw6bFlcWbxYThuZXhuoPHtce54bi/x5jhuo3FuuG4pycKICAgICAgICAgICAgICAgIGNvbnN0IGIgPSAnYWFhYWVlZWVpaWlpb29vb3V1dXVuY3N5eXlvYXJzbnB3Z25tdXh6aCcKICAgICAgICAgICAgICAgIGNvbnN0IHAgPSBuZXcgUmVnRXhwKGEuc3BsaXQoJycpLmpvaW4oJ3wnKSwgJ2cnKQoKICAgICAgICAgICAgICAgIHJldHVybiB0ZXh0LnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKQogICAgICAgICAgICAgICAgLnJlcGxhY2UoL1tcc19dKy9nLCAnLScpCiAgICAgICAgICAgICAgICAucmVwbGFjZShwLCBjID0+CiAgICAgICAgICAgICAgICAgICAgYi5jaGFyQXQoYS5pbmRleE9mKGMpKSkKICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8mL2csIGAtJHthbXBlcnNhbmR9LWApCiAgICAgICAgICAgICAgICAucmVwbGFjZSgvW15cdy1dKy9nLCAnJykKICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8tLSsvZywgJy0nKQogICAgICAgICAgICAgICAgLnJlcGxhY2UoL14tK3wtKyQvZywgJycpCiAgICAgICAgICAgIH0sIAoKICAgICAgICAgICAgdXBsb2FkSW1hZ2UoZSl7CiAgICAgICAgICAgICAgICBjb25zdCBpbWFnZSA9IGUudGFyZ2V0LmZpbGVzWzBdOwogICAgICAgICAgICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGltYWdlKTsKICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBlID0+ewogICAgICAgICAgICAgICAgICAgIHRoaXMucHJldmlld0ltYWdlID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkZCcpOwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZ2V0SXRlbSgpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHZhciBpZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsKCiAgICAgICAgICAgICAgICBkYi5jb2xsZWN0aW9uKCdjb3VudHJpZXMnKS5kb2MoaWQpLmdldCgpLnRoZW4oKGRvYykgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRvYy5kYXRhKCkpOwogICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbSA9IGRvYy5kYXRhKCk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmV2aWV3SW1hZ2UgPSBkb2MuZGF0YSgpLmltYWdlOwogICAgICAgICAgICAgICAgICAgIC8vdGhpcy5wcmV2aWV3SW1hZ2UgPSBkb2MuZGF0YSgpLmltYWdlOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZ2V0Q29tcGFuaWVzKCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zID0gWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAga2V5OiAnMScsCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOidQdWJsaXNoJyAKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAga2V5OiAnMicsCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOidVbnB1Ymxpc2gnIAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF07CgogICAgICAgICAgICB9LAoKICAgICAgICAgICAgc3VibWl0KCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpcy4kcm91dGUucGFyYW1zLmlkOwogICAgICAgICAgICAgICAgdmFyICBkYXRlID0gbmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygpOy8vLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwgMTApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5pdGVtKTsKICAgICAgICAgICAgICAgIGRiLmNvbGxlY3Rpb24oImNvdW50cmllcyIpCiAgICAgICAgICAgICAgICAuZG9jKGlkKQogICAgICAgICAgICAgICAgLnVwZGF0ZSh7CiAgICAgICAgICAgICAgICAgIGNvdW50cnk6IHRoaXMuaXRlbS5jb3VudHJ5LAogICAgICAgICAgICAgICAgICBzbHVnOiB0aGlzLnNsdWcsCiAgICAgICAgICAgICAgICAgIHN0YXR1czogdGhpcy5pdGVtLnN0YXR1cywKICAgICAgICAgICAgICAgICAgaW1hZ2U6dGhpcy5wcmV2aWV3SW1hZ2UsCiAgICAgICAgICAgICAgICAgIG1vZGlmaWVkOiBkYXRlLAogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkRvY3VtZW50IHN1Y2Nlc3NmdWxseSB1cGRhdGVkISIpOwogICAgICAgICAgICAgICAgICAvL3RoaXMucmVhZEVtcGxveWVlcygpOwogICAgICAgICAgICAgICAgICB0aGlzLiR0b2FzdGVkLnN1Y2Nlc3MoJ1N1Y2Nlc3MsIFVwZGF0ZWQgU3VjY2Vzc2Z1bGx5IScsIHsKICAgICAgICAgICAgICAgICAgICBpY29uIDogJ2NoZWNrJywKICAgICAgICAgICAgICAgICAgICAgLy9pY29uIDogJ2Vycm9yX291dGxpbmUnCiAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2NvdW50cmllcy9pbmRleCcpOwogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgICAgICAgICAgLy8gVGhlIGRvY3VtZW50IHByb2JhYmx5IGRvZXNuJ3QgZXhpc3QuCiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIkVycm9yIHVwZGF0aW5nIGRvY3VtZW50OiAiLCBlcnJvcik7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0K"},{"version":3,"sources":["Edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Edit.vue","sourceRoot":"src/components/countries","sourcesContent":["<template>\n\n\n \n<body>\n\n\n<div id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin5\" data-sidebartype=\"full\"\n    data-sidebar-position=\"absolute\" data-header-position=\"absolute\" data-boxed-layout=\"full\">\n\n    <Header></Header>\n\n\n\n    <Sidebar></Sidebar>\n\n    <div class=\"dashboard-wrapper page-wrapper\">\n            <div class=\"page-breadcrumb\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-lg-3 col-md-4 col-sm-4 col-xs-12\">\n                        <h4 class=\"page-title\">Edit Country</h4>\n                    </div>\n                </div>\n            </div>\n                        <div class=\"container-fluid\">\n                <div class=\"row\">\n             \n                    <div class=\"col-lg-12 col-xlg-9 col-md-12\">\n                        \n                        <form class=\"form-horizontal form-material\" v-on:submit.prevent=\"submit\">\n \n                            <div class=\"card profile-card\">\n                                <div class=\"card-body\">\n\n                                    \n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Country</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" class=\"form-control\" name=\"country\" v-model=\"item.country\"/>\n                                        </div>\n                                    </div>\n\n                                 \n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Slug</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" class=\"form-control\" name=\"slug\" v-model=\"slug\"/>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Image</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                        <img v-bind:src=\"previewImage\" class=\"uploading-image\" />\n                                        <input type=\"file\" accept=\"image/jpeg\" @change=uploadImage>\n                                         \n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Status</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                        <select name=\"status\" v-model=\"item.status\" class=\"form-control\">\n                                        <option v-for=\"option in options\" v-bind:key=\"option.value\" v-bind:value=\"option.key\">\n                                                {{ option.value }}\n                                            </option>\n                                        </select>\n                                       <span>Selected: {{ item.status }}</span>\n                                        </div>\n                                    </div>\n\n          \n                                    <div class=\"form-group mb-4\">\n                                        <div class=\"col-sm-12\">\n                                        <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\"/>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </form>  \n                    </div>\n                </div>\n            </div>\n           \n        </div>\n    \n    <Footer></Footer>\n\n</div>\n\n\n\n\n\n</body>\n\n\n</template>\n\n\n\n\n\n\n\n<script>\n\nimport Header from './../admin-header';\nimport Footer from './../admin-footer';\nimport Sidebar from './../admin-sidebar';\n\nimport { db } from '../../main'\n\nexport default{\n     name: 'Edit',\n        data(){\n            return{\n                item:{},\n                previewImage:'',\n                selected: '',\n                options: [],\n            }\n        },\n        components:{\n            'Header':Header,\n            'Sidebar':Sidebar,\n            'Footer':Footer,\n        \n        },\n\n        created: function(){\n            this.getItem();\n            this.getCompanies();\n        },\n        computed: {\n            slug: function () {\n            return this.slugify(this.item.country)\n            }\n        },\n\n        methods: {\n\n            slugify (text, ampersand = 'and') {\n                const a = 'àáäâèéëêìíïîòóöôùúüûñçßÿỳýœæŕśńṕẃǵǹḿǘẍźḧ'\n                const b = 'aaaaeeeeiiiioooouuuuncsyyyoarsnpwgnmuxzh'\n                const p = new RegExp(a.split('').join('|'), 'g')\n\n                return text.toString().toLowerCase()\n                .replace(/[\\s_]+/g, '-')\n                .replace(p, c =>\n                    b.charAt(a.indexOf(c)))\n                .replace(/&/g, `-${ampersand}-`)\n                .replace(/[^\\w-]+/g, '')\n                .replace(/--+/g, '-')\n                .replace(/^-+|-+$/g, '')\n            }, \n\n            uploadImage(e){\n                const image = e.target.files[0];\n                const reader = new FileReader();\n                reader.readAsDataURL(image);\n                reader.onload = e =>{\n                    this.previewImage = e.target.result;\n                    console.log('dd');\n                };\n            },\n            getItem()\n            {\n                var id = this.$route.params.id;\n\n                db.collection('countries').doc(id).get().then((doc) => {\n                    console.log(doc.data());\n                    this.item = doc.data();\n                    this.previewImage = doc.data().image;\n                    //this.previewImage = doc.data().image;\n                })\n            },\n            getCompanies()\n            {\n                this.options = [\n                    {\n                        key: '1',\n                        value:'Publish' \n                    },\n                    {\n                        key: '2',\n                        value:'Unpublish' \n                    }\n                ];\n\n            },\n\n            submit()\n            {\n                var id = this.$route.params.id;\n                var  date = new Date().toLocaleString();//.toISOString().slice(0, 10);\n                console.log(this.item);\n                db.collection(\"countries\")\n                .doc(id)\n                .update({\n                  country: this.item.country,\n                  slug: this.slug,\n                  status: this.item.status,\n                  image:this.previewImage,\n                  modified: date,\n                })\n                .then(() => {\n                  console.log(\"Document successfully updated!\");\n                  //this.readEmployees();\n                  this.$toasted.success('Success, Updated Successfully!', {\n                    icon : 'check',\n                     //icon : 'error_outline'\n                 })\n                 this.$router.push('/countries/index');\n                 \n                })\n                .catch((error) => {\n                  // The document probably doesn't exist.\n                  console.error(\"Error updating document: \", error);\n                });\n            }\n        }\n    }\n</script>"]}]}
{"remainingRequest":"/var/www/html/active-intro/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/active-intro/src/components/admin-sidebar.vue?vue&type=template&id=14834620&","dependencies":[{"path":"/var/www/html/active-intro/src/components/admin-sidebar.vue","mtime":1623310217235},{"path":"/var/www/html/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
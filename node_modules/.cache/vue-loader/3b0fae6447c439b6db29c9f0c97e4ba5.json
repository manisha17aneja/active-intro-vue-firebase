{"remainingRequest":"/ashima/tarun/interactive/bkp/active-intro27-05-2021/active-intro/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/ashima/tarun/interactive/bkp/active-intro27-05-2021/active-intro/node_modules/cache-loader/dist/cjs.js??ref--0-0!/ashima/tarun/interactive/bkp/active-intro27-05-2021/active-intro/node_modules/vue-loader/lib/index.js??vue-loader-options!/ashima/tarun/interactive/bkp/active-intro27-05-2021/active-intro/src/components/Contact.vue?vue&type=template&id=cf6573c0&","dependencies":[{"path":"/ashima/tarun/interactive/bkp/active-intro27-05-2021/active-intro/src/components/Contact.vue","mtime":1621312415639},{"path":"/ashima/tarun/interactive/bkp/active-intro27-05-2021/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/ashima/tarun/interactive/bkp/active-intro27-05-2021/active-intro/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/ashima/tarun/interactive/bkp/active-intro27-05-2021/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/ashima/tarun/interactive/bkp/active-intro27-05-2021/active-intro/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
{"remainingRequest":"/var/www/html/active-intro/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/active-intro/src/components/categories/Create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/active-intro/src/components/categories/Create.vue","mtime":1623646886000},{"path":"/var/www/html/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/active-intro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/active-intro/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgSGVhZGVyIGZyb20gJy4vLi4vYWRtaW4taGVhZGVyJzsKaW1wb3J0IEZvb3RlciBmcm9tICcuLy4uL2FkbWluLWZvb3Rlcic7CmltcG9ydCBTaWRlYmFyIGZyb20gJy4vLi4vYWRtaW4tc2lkZWJhcic7CgppbXBvcnQgeyByZXF1aXJlZCB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IFZ1ZUF4aW9zIGZyb20gJ3Z1ZS1heGlvcycKaW1wb3J0IHsgZGIgfSBmcm9tICcuLi8uLi9tYWluJwoKVnVlLnVzZShWdWVBeGlvcyxheGlvcykKCgoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ0NyZWF0ZScsCiAgICBjb21wb25lbnRzOnsKICAgICAgICAnSGVhZGVyJzpIZWFkZXIsCiAgICAgICAgJ1NpZGViYXInOlNpZGViYXIsCiAgICAgICAgJ0Zvb3Rlcic6Rm9vdGVyLAogICAgICAgCiAgICB9LAogICAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICAgIGltYWdlOiAnJywgCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICAgICAgbWV0YV90aXRsZTogJycsCiAgICAgICAgICAgIG1ldGFfZGVzY3JpcHRpb246ICcnLAogICAgICAgICAgICBtZXRhX2tleXdvcmRzOiAnJywKICAgICAgICAgICAgcHJldmlld0ltYWdlOicnLAogICAgICAgIH0KICAgIH0sIAogICAgdmFsaWRhdGlvbnM6IHsKICAgICAgICBuYW1lOiB7cmVxdWlyZWR9LAogICAgICAgIGltYWdlOiB7fSwKICAgICAgICBkZXNjcmlwdGlvbjoge3JlcXVpcmVkfSwKICAgICAgICBtZXRhX3RpdGxlOiB7fSwKICAgICAgICBtZXRhX2Rlc2NyaXB0aW9uOiB7fSwKICAgICAgICBtZXRhX2tleXdvcmRzOiB7fQogICAgfSwKCiAgICBtZXRob2RzOiB7CgogICAgICAgIHVwbG9hZEltYWdlKGUpewogICAgICAgICAgICBjb25zdCBpbWFnZSA9IGUudGFyZ2V0LmZpbGVzWzBdOwogICAgICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChpbWFnZSk7CiAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBlID0+ewogICAgICAgICAgICAgICAgdGhpcy5wcmV2aWV3SW1hZ2UgPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZGQnKTsKICAgICAgICAgICAgfTsKICAgICAgICB9LAoKICAgICAgICB2YWxpZGF0aW9uU3RhdHVzOiBmdW5jdGlvbih2YWxpZGF0aW9uKSB7CiAgICAgICAgICAgIHJldHVybiB0eXBlb2YgdmFsaWRhdGlvbiAhPSAidW5kZWZpbmVkIiA/IHZhbGlkYXRpb24uJGVycm9yIDogZmFsc2U7CiAgICAgICAgfSwKCiAgICAgICAgCgogICAgICAgIHN1Ym1pdDogZnVuY3Rpb24oKSB7CgogICAgICAgICAgICB0aGlzLiR2LiR0b3VjaCgpOwogICAgICAgICAgICBpZiAodGhpcy4kdi4kcGVuZGRpbmcgfHwgdGhpcy4kdi4kZXJyb3IpIHJldHVybjsKICAgICAgICAgICAgdmFyICBkYXRlID0gbmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygpOy8vLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwgMTApOwoKCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCcxMjMnKTsKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5wcmV2aWV3SW1hZ2UpOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgIC8vIGNvbnN0IHJlc3BvbnNlID0gYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0L2ludGVyYWN0aXZlX2ludHJvL2FwaS9sb2dpbjEnLCB7CiAgICAgICAgICAgICAgIC8vIGhlYWRlcnM6IHsgIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbiI6ICIqIiwgfQogICAgICAgICAgIC8vIH0pOwogICAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlc3BvbnNlKTsKCiAgICAgICAvKiAgICAgVnVlLmF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdC9pbnRlcmFjdGl2ZV9pbnRyby9hcGkvbG9naW4xJykudGhlbigocmVzcG9uc2UpPT57CiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4ocmVzcG9uc2UuZGF0YSkKICAgICAgICAgICAgICAgLy8gdGhpcy4kcm91dGVyLnB1c2goJ2Rhc2hib2FyZCcpOwoKICAgICAgICAgICAgfSkqLwoKICAgICAgICAgICAgLypheGlvcy5wb3N0KCdodHRwOi8vbG9jYWxob3N0L2ludGVyYWN0aXZlX2ludHJvL2FwaS9sb2dpbicsIHRoaXMuZm9ybSwpCiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiggcmVzcG9uc2UgKXsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4ocmVzcG9uc2UpCiAgICAgICAgICAgICAgICB9LmJpbmQodGhpcykpOwoqLwoKICAvLyBQT1NUIHJlcXVlc3QgdXNpbmcgYXhpb3Mgd2l0aCBzZXQgaGVhZGVycwogIGNvbnN0IGRhdGEgPSB7CiAgICAiZW1haWwiOiAiYWRtaW5AZ21haWwuY29tIiwKICAgICJwYXNzd29yZCI6ICJhZG1pbkBnbWFpbC5jb20iLAp9OwogIC8vY29uc3QgaGVhZGVycyA9IHsgCiAgIC8vICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywKICAgCiAgLy99OwogIAogIGF4aW9zLnBvc3QoImh0dHA6Ly8xMjcuMC4wLjE6ODAwMC9hcGkvZ2V0QWxsIiwgZGF0YSkKICAgIC50aGVuKChyZXNwb25zZSk9PnsKICAgICAgICBjb25zb2xlLndhcm4ocmVzcG9uc2UpCiAgICB9KTsKCgogICAgICAgICAgICAKICAgICAgICAgICAgZGIuY29sbGVjdGlvbigiY2F0ZWdvcmllcyIpCiAgICAgICAgICAgIC5hZGQoewogICAgICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLAogICAgICAgICAgICAgICAgaW1hZ2U6IHRoaXMucHJldmlld0ltYWdlLAogICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICBtZXRhX3RpdGxlOiB0aGlzLm1ldGFfdGl0bGUsCiAgICAgICAgICAgICAgICBtZXRhX2Rlc2NyaXB0aW9uOiB0aGlzLm1ldGFfZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICB0eXBlOiAnMScsCiAgICAgICAgICAgICAgICBtZXRhX2tleXdvcmRzOiB0aGlzLm1ldGFfa2V5d29yZHMsCiAgICAgICAgICAgICAgICBjcmVhdGVkOiBkYXRlLAogICAgICAgICAgICAgICAgbW9kaWZpZWQ6IGRhdGUsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJBZGRlZCBTdWNjZXNzZnVsbHkhIik7CiAgICAgICAgICAgICAgICB0aGlzLiR0b2FzdGVkLnN1Y2Nlc3MoJ1N1Y2Nlc3MsIEFkZGVkIFN1Y2Nlc3NmdWxseSEnLCB7CiAgICAgICAgICAgICAgICAgICBpY29uIDogJ2NoZWNrJywKICAgICAgICAgICAgICAgICAgICAvL2ljb24gOiAnZXJyb3Jfb3V0bGluZScKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2NhdGVnb3JpZXMvaW5kZXgnKTsKICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigiRXJyb3Igd3JpdGluZyBkb2N1bWVudDogIiwgZXJyb3IpOwogICAgICAgICAgICB9KTsgCgogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["Create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Create.vue","sourceRoot":"src/components/categories","sourcesContent":["<template>\n\n\n \n<body>\n\n\n<div id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin5\" data-sidebartype=\"full\"\n    data-sidebar-position=\"absolute\" data-header-position=\"absolute\" data-boxed-layout=\"full\">\n\n    <Header></Header>\n\n\n\n    <Sidebar></Sidebar>\n\n    <div class=\"dashboard-wrapper page-wrapper\">\n            <div class=\"page-breadcrumb\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-lg-3 col-md-4 col-sm-4 col-xs-12\">\n                        <h4 class=\"page-title\">Create Category</h4>\n                    </div>\n                </div>\n            </div>\n                        <div class=\"container-fluid\">\n                <div class=\"row\">\n             \n                    <div class=\"col-lg-12 col-xlg-9 col-md-12\">\n\n                    <form class=\"form-horizontal form-material\" v-on:submit.prevent=\"submit\">\n\n\n                        <div class=\"card profile-card\">\n                            <div class=\"card-body\">\n                               \n            \n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Name</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" v-model.trim=\"$v.name.$model\" :class=\"{'is-invalid': validationStatus($v.name)}\" class=\"form-control form-control-lg\">\n                                            <div v-if=\"!$v.name.required\" class=\"invalid-feedback\">The name field is required.</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Description</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <textarea v-model.trim=\"$v.description.$model\" :class=\"{'is-invalid': validationStatus($v.description)}\" class=\"form-control form-control-lg\" rows=\"5\"></textarea>\n                                            <div v-if=\"!$v.description.required\" class=\"invalid-feedback\">The description field is required.</div>\n                                        </div>\n                                     </div>\n\n                                     <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Image</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                        <img v-bind:src=\"previewImage\" class=\"uploading-image\" />\n                                        <input type=\"file\" accept=\"image/jpeg\" @change=uploadImage>\n                                         <div v-if=\"!$v.image.required\" class=\"invalid-feedback\">The image field is required.</div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                   \n\n\n                        <div class=\"card profile-card\">\n                            <div class=\"card-body\">\n  \n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Meta Title</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" v-model.trim=\"$v.meta_title.$model\" :class=\"{'is-invalid': validationStatus($v.meta_title)}\" class=\"form-control form-control-lg\">\n                                            <div v-if=\"!$v.meta_title.required\" class=\"invalid-feedback\">The meta title field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Meta Description</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                           <textarea v-model.trim=\"$v.meta_description.$model\" :class=\"{'is-invalid': validationStatus($v.meta_description)}\" class=\"form-control form-control-lg\" rows=\"5\"></textarea>\n                                            <div v-if=\"!$v.meta_description.required\" class=\"invalid-feedback\">The meta description field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-group mb-4\">\n                                        <label class=\"col-md-12 p-0\">Meta Keywords</label>\n                                        <div class=\"col-md-12 border-bottom p-0\">\n                                            <input type=\"text\" v-model.trim=\"$v.meta_keywords.$model\" :class=\"{'is-invalid': validationStatus($v.meta_keywords)}\" class=\"form-control form-control-lg\">\n                                            <div v-if=\"!$v.meta_keywords.required\" class=\"invalid-feedback\">The meta keywords field is required.</div>\n                                        </div>\n                                    </div>\n\n\n                                   \n                 \n                                    <div class=\"form-group mb-4\">\n                                        <div class=\"col-sm-12 pl-0 mt-10\">\n                                        <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\"/>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                            </form>\n                        \n\n                        \n                    </div>\n                </div>\n            </div>\n           \n        </div>\n    \n    <Footer></Footer>\n\n</div>\n\n\n\n\n\n</body>\n\n\n</template>\n\n\n\n\n<script>\n\nimport Header from './../admin-header';\nimport Footer from './../admin-footer';\nimport Sidebar from './../admin-sidebar';\n\nimport { required } from 'vuelidate/lib/validators'\nimport Vue from 'vue'\nimport axios from 'axios'\nimport VueAxios from 'vue-axios'\nimport { db } from '../../main'\n\nVue.use(VueAxios,axios)\n\n\n\nexport default {\n    name: 'Create',\n    components:{\n        'Header':Header,\n        'Sidebar':Sidebar,\n        'Footer':Footer,\n       \n    },\n    data: function() {\n        return {\n            name: '',\n            image: '', \n            description: '',\n            meta_title: '',\n            meta_description: '',\n            meta_keywords: '',\n            previewImage:'',\n        }\n    }, \n    validations: {\n        name: {required},\n        image: {},\n        description: {required},\n        meta_title: {},\n        meta_description: {},\n        meta_keywords: {}\n    },\n\n    methods: {\n\n        uploadImage(e){\n            const image = e.target.files[0];\n            const reader = new FileReader();\n            reader.readAsDataURL(image);\n            reader.onload = e =>{\n                this.previewImage = e.target.result;\n                console.log('dd');\n            };\n        },\n\n        validationStatus: function(validation) {\n            return typeof validation != \"undefined\" ? validation.$error : false;\n        },\n\n        \n\n        submit: function() {\n\n            this.$v.$touch();\n            if (this.$v.$pendding || this.$v.$error) return;\n            var  date = new Date().toLocaleString();//.toISOString().slice(0, 10);\n\n\n            console.log('123');\n            console.log(this.previewImage);\n                    \n           // const response = axios.get('http://localhost/interactive_intro/api/login1', {\n               // headers: { \"Access-Control-Allow-Origin\": \"*\", }\n           // });\n            //console.log(response);\n\n       /*     Vue.axios.get('http://localhost/interactive_intro/api/login1').then((response)=>{\n                console.warn(response.data)\n               // this.$router.push('dashboard');\n\n            })*/\n\n            /*axios.post('http://localhost/interactive_intro/api/login', this.form,)\n                .then(function( response ){\n                    console.warn(response)\n                }.bind(this));\n*/\n\n  // POST request using axios with set headers\n  const data = {\n    \"email\": \"admin@gmail.com\",\n    \"password\": \"admin@gmail.com\",\n};\n  //const headers = { \n   // 'Content-type': 'application/x-www-form-urlencoded',\n   \n  //};\n  \n  axios.post(\"http://127.0.0.1:8000/api/getAll\", data)\n    .then((response)=>{\n        console.warn(response)\n    });\n\n\n            \n            db.collection(\"categories\")\n            .add({\n                name: this.name,\n                image: this.previewImage,\n                description: this.description,\n                meta_title: this.meta_title,\n                meta_description: this.meta_description,\n                type: '1',\n                meta_keywords: this.meta_keywords,\n                created: date,\n                modified: date,\n            })\n            .then(() => {\n                console.log(\"Added Successfully!\");\n                this.$toasted.success('Success, Added Successfully!', {\n                   icon : 'check',\n                    //icon : 'error_outline'\n                })\n                this.$router.push('/categories/index');\n            })\n            .catch((error) => {\n                console.error(\"Error writing document: \", error);\n            }); \n\n        }\n    }\n}\n</script>"]}]}
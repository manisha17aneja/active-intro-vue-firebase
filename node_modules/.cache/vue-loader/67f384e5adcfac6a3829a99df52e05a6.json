{"remainingRequest":"/var/www/html/firebase-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/firebase-auth/src/components/layout/Admin.vue?vue&type=template&id=3a49871a&","dependencies":[{"path":"/var/www/html/firebase-auth/src/components/layout/Admin.vue","mtime":1617855695879},{"path":"/var/www/html/firebase-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/firebase-auth/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/firebase-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/firebase-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}